{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Optional, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport * as i4 from 'ng-zorro-antd/dropdown';\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\nimport * as i5 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { __decorate } from 'tslib';\nimport { Router, ActivatedRoute, NavigationEnd, PRIMARY_OUTLET } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { takeUntil, filter, startWith } from 'rxjs/operators';\nimport { PREFIX } from 'ng-zorro-antd/core/logger';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i1 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { NzOverlayModule } from 'ng-zorro-antd/core/overlay';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/**\n * https://angular.io/errors/NG3003\n * An intermediate interface for {@link NzBreadCrumbComponent} & {@link NzBreadCrumbItemComponent}\n */\nfunction NzBreadCrumbItemComponent_ng_container_0_ng_template_2_Template(rf, ctx) {}\nfunction NzBreadCrumbItemComponent_ng_container_0_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 6);\n  }\n}\nfunction NzBreadCrumbItemComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 3);\n    i0.ɵɵtemplate(2, NzBreadCrumbItemComponent_ng_container_0_ng_template_2_Template, 0, 0, \"ng-template\", 4);\n    i0.ɵɵtemplate(3, NzBreadCrumbItemComponent_ng_container_0_span_3_Template, 1, 0, \"span\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    const _r1 = i0.ɵɵreference(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzDropdownMenu\", ctx_r0.nzOverlay);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !!ctx_r0.nzOverlay);\n  }\n}\nfunction NzBreadCrumbItemComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 7);\n    i0.ɵɵprojection(1);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NzBreadCrumbItemComponent_span_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.nzBreadCrumbComponent.nzSeparator, \" \");\n  }\n}\nfunction NzBreadCrumbItemComponent_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵtemplate(1, NzBreadCrumbItemComponent_span_3_ng_container_1_Template, 2, 1, \"ng-container\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"nzStringTemplateOutlet\", ctx_r3.nzBreadCrumbComponent.nzSeparator);\n  }\n}\nconst _c0 = [\"*\"];\nfunction NzBreadCrumbComponent_ng_container_1_nz_breadcrumb_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"nz-breadcrumb-item\")(1, \"a\", 2);\n    i0.ɵɵlistener(\"click\", function NzBreadCrumbComponent_ng_container_1_nz_breadcrumb_item_1_Template_a_click_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const breadcrumb_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r3.navigate(breadcrumb_r2.url, $event));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const breadcrumb_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"href\", breadcrumb_r2.url, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(breadcrumb_r2.label);\n  }\n}\nfunction NzBreadCrumbComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NzBreadCrumbComponent_ng_container_1_nz_breadcrumb_item_1_Template, 3, 2, \"nz-breadcrumb-item\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.breadcrumbs);\n  }\n}\nclass NzBreadcrumb {}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzBreadCrumbItemComponent {\n  constructor(nzBreadCrumbComponent) {\n    this.nzBreadCrumbComponent = nzBreadCrumbComponent;\n  }\n}\nNzBreadCrumbItemComponent.ɵfac = function NzBreadCrumbItemComponent_Factory(t) {\n  return new (t || NzBreadCrumbItemComponent)(i0.ɵɵdirectiveInject(NzBreadcrumb));\n};\nNzBreadCrumbItemComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzBreadCrumbItemComponent,\n  selectors: [[\"nz-breadcrumb-item\"]],\n  inputs: {\n    nzOverlay: \"nzOverlay\"\n  },\n  exportAs: [\"nzBreadcrumbItem\"],\n  ngContentSelectors: _c0,\n  decls: 4,\n  vars: 3,\n  consts: [[4, \"ngIf\", \"ngIfElse\"], [\"noMenuTpl\", \"\"], [\"class\", \"ant-breadcrumb-separator\", 4, \"ngIf\"], [\"nz-dropdown\", \"\", 1, \"ant-breadcrumb-overlay-link\", 3, \"nzDropdownMenu\"], [3, \"ngTemplateOutlet\"], [\"nz-icon\", \"\", \"nzType\", \"down\", 4, \"ngIf\"], [\"nz-icon\", \"\", \"nzType\", \"down\"], [1, \"ant-breadcrumb-link\"], [1, \"ant-breadcrumb-separator\"], [4, \"nzStringTemplateOutlet\"]],\n  template: function NzBreadCrumbItemComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, NzBreadCrumbItemComponent_ng_container_0_Template, 4, 3, \"ng-container\", 0);\n      i0.ɵɵtemplate(1, NzBreadCrumbItemComponent_ng_template_1_Template, 2, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵtemplate(3, NzBreadCrumbItemComponent_span_3_Template, 2, 1, \"span\", 2);\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(2);\n      i0.ɵɵproperty(\"ngIf\", !!ctx.nzOverlay)(\"ngIfElse\", _r1);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.nzBreadCrumbComponent.nzSeparator);\n    }\n  },\n  dependencies: [i2.NgIf, i2.NgTemplateOutlet, i3.NzStringTemplateOutletDirective, i4.NzDropDownDirective, i5.NzIconDirective],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzBreadCrumbItemComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-breadcrumb-item',\n      exportAs: 'nzBreadcrumbItem',\n      preserveWhitespaces: false,\n      template: `\n    <ng-container *ngIf=\"!!nzOverlay; else noMenuTpl\">\n      <span class=\"ant-breadcrumb-overlay-link\" nz-dropdown [nzDropdownMenu]=\"nzOverlay\">\n        <ng-template [ngTemplateOutlet]=\"noMenuTpl\"></ng-template>\n        <span *ngIf=\"!!nzOverlay\" nz-icon nzType=\"down\"></span>\n      </span>\n    </ng-container>\n\n    <ng-template #noMenuTpl>\n      <span class=\"ant-breadcrumb-link\">\n        <ng-content></ng-content>\n      </span>\n    </ng-template>\n\n    <span class=\"ant-breadcrumb-separator\" *ngIf=\"nzBreadCrumbComponent.nzSeparator\">\n      <ng-container *nzStringTemplateOutlet=\"nzBreadCrumbComponent.nzSeparator\">\n        {{ nzBreadCrumbComponent.nzSeparator }}\n      </ng-container>\n    </span>\n  `\n    }]\n  }], function () {\n    return [{\n      type: NzBreadcrumb\n    }];\n  }, {\n    nzOverlay: [{\n      type: Input\n    }]\n  });\n})();\nclass NzBreadCrumbComponent {\n  constructor(injector, cdr, elementRef, renderer, directionality) {\n    this.injector = injector;\n    this.cdr = cdr;\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n    this.directionality = directionality;\n    this.nzAutoGenerate = false;\n    this.nzSeparator = '/';\n    this.nzRouteLabel = 'breadcrumb';\n    this.nzRouteLabelFn = label => label;\n    this.breadcrumbs = [];\n    this.dir = 'ltr';\n    this.destroy$ = new Subject();\n    renderer.addClass(elementRef.nativeElement, 'ant-breadcrumb');\n  }\n  ngOnInit() {\n    if (this.nzAutoGenerate) {\n      this.registerRouterChange();\n    }\n    this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe(direction => {\n      this.dir = direction;\n      this.prepareComponentForRtl();\n      this.cdr.detectChanges();\n    });\n    this.dir = this.directionality.value;\n    this.prepareComponentForRtl();\n  }\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  navigate(url, e) {\n    e.preventDefault();\n    this.injector.get(Router).navigateByUrl(url);\n  }\n  registerRouterChange() {\n    try {\n      const router = this.injector.get(Router);\n      const activatedRoute = this.injector.get(ActivatedRoute);\n      router.events.pipe(filter(e => e instanceof NavigationEnd), takeUntil(this.destroy$), startWith(true) // trigger initial render\n      ).subscribe(() => {\n        this.breadcrumbs = this.getBreadcrumbs(activatedRoute.root);\n        this.cdr.markForCheck();\n      });\n    } catch (e) {\n      throw new Error(`${PREFIX} You should import RouterModule if you want to use 'NzAutoGenerate'.`);\n    }\n  }\n  getBreadcrumbs(route, url = '', breadcrumbs = []) {\n    const children = route.children;\n    // If there's no sub root, then stop the recurse and returns the generated breadcrumbs.\n    if (children.length === 0) {\n      return breadcrumbs;\n    }\n    for (const child of children) {\n      if (child.outlet === PRIMARY_OUTLET) {\n        // Only parse components in primary router-outlet (in another word, router-outlet without a specific name).\n        // Parse this layer and generate a breadcrumb item.\n        const routeUrl = child.snapshot.url.map(segment => segment.path).filter(path => path).join('/');\n        // Do not change nextUrl if routeUrl is falsy. This happens when it's a route lazy loading other modules.\n        const nextUrl = routeUrl ? `${url}/${routeUrl}` : url;\n        const breadcrumbLabel = this.nzRouteLabelFn(child.snapshot.data[this.nzRouteLabel]);\n        // If have data, go to generate a breadcrumb for it.\n        if (routeUrl && breadcrumbLabel) {\n          const breadcrumb = {\n            label: breadcrumbLabel,\n            params: child.snapshot.params,\n            url: nextUrl\n          };\n          breadcrumbs.push(breadcrumb);\n        }\n        return this.getBreadcrumbs(child, nextUrl, breadcrumbs);\n      }\n    }\n    return breadcrumbs;\n  }\n  prepareComponentForRtl() {\n    if (this.dir === 'rtl') {\n      this.renderer.addClass(this.elementRef.nativeElement, 'ant-breadcrumb-rtl');\n    } else {\n      this.renderer.removeClass(this.elementRef.nativeElement, 'ant-breadcrumb-rtl');\n    }\n  }\n}\nNzBreadCrumbComponent.ɵfac = function NzBreadCrumbComponent_Factory(t) {\n  return new (t || NzBreadCrumbComponent)(i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.Directionality, 8));\n};\nNzBreadCrumbComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzBreadCrumbComponent,\n  selectors: [[\"nz-breadcrumb\"]],\n  inputs: {\n    nzAutoGenerate: \"nzAutoGenerate\",\n    nzSeparator: \"nzSeparator\",\n    nzRouteLabel: \"nzRouteLabel\",\n    nzRouteLabelFn: \"nzRouteLabelFn\"\n  },\n  exportAs: [\"nzBreadcrumb\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NzBreadcrumb,\n    useExisting: NzBreadCrumbComponent\n  }])],\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\"]],\n  template: function NzBreadCrumbComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n      i0.ɵɵtemplate(1, NzBreadCrumbComponent_ng_container_1_Template, 2, 1, \"ng-container\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.nzAutoGenerate && ctx.breadcrumbs.length);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, NzBreadCrumbItemComponent],\n  encapsulation: 2,\n  changeDetection: 0\n});\n__decorate([InputBoolean()], NzBreadCrumbComponent.prototype, \"nzAutoGenerate\", void 0);\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzBreadCrumbComponent, [{\n    type: Component,\n    args: [{\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      selector: 'nz-breadcrumb',\n      exportAs: 'nzBreadcrumb',\n      preserveWhitespaces: false,\n      providers: [{\n        provide: NzBreadcrumb,\n        useExisting: NzBreadCrumbComponent\n      }],\n      template: `\n    <ng-content></ng-content>\n    <ng-container *ngIf=\"nzAutoGenerate && breadcrumbs.length\">\n      <nz-breadcrumb-item *ngFor=\"let breadcrumb of breadcrumbs\">\n        <a [attr.href]=\"breadcrumb.url\" (click)=\"navigate(breadcrumb.url, $event)\">{{ breadcrumb.label }}</a>\n      </nz-breadcrumb-item>\n    </ng-container>\n  `\n    }]\n  }], function () {\n    return [{\n      type: i0.Injector\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    nzAutoGenerate: [{\n      type: Input\n    }],\n    nzSeparator: [{\n      type: Input\n    }],\n    nzRouteLabel: [{\n      type: Input\n    }],\n    nzRouteLabelFn: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzBreadCrumbSeparatorComponent {}\nNzBreadCrumbSeparatorComponent.ɵfac = function NzBreadCrumbSeparatorComponent_Factory(t) {\n  return new (t || NzBreadCrumbSeparatorComponent)();\n};\nNzBreadCrumbSeparatorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NzBreadCrumbSeparatorComponent,\n  selectors: [[\"nz-breadcrumb-separator\"]],\n  exportAs: [\"nzBreadcrumbSeparator\"],\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 0,\n  consts: [[1, \"ant-breadcrumb-separator\"]],\n  template: function NzBreadCrumbSeparatorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"span\", 0);\n      i0.ɵɵprojection(1);\n      i0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzBreadCrumbSeparatorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'nz-breadcrumb-separator',\n      exportAs: 'nzBreadcrumbSeparator',\n      template: `\n    <span class=\"ant-breadcrumb-separator\">\n      <ng-content></ng-content>\n    </span>\n  `\n    }]\n  }], null, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzBreadCrumbModule {}\nNzBreadCrumbModule.ɵfac = function NzBreadCrumbModule_Factory(t) {\n  return new (t || NzBreadCrumbModule)();\n};\nNzBreadCrumbModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NzBreadCrumbModule\n});\nNzBreadCrumbModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule, NzOutletModule, OverlayModule, NzOverlayModule, NzDropDownModule, NzIconModule, BidiModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NzBreadCrumbModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, NzOutletModule, OverlayModule, NzOverlayModule, NzDropDownModule, NzIconModule],\n      declarations: [NzBreadCrumbComponent, NzBreadCrumbItemComponent, NzBreadCrumbSeparatorComponent],\n      exports: [BidiModule, NzBreadCrumbComponent, NzBreadCrumbItemComponent, NzBreadCrumbSeparatorComponent]\n    }]\n  }], null, null);\n})();\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzBreadCrumbComponent, NzBreadCrumbItemComponent, NzBreadCrumbModule, NzBreadCrumbSeparatorComponent };","map":{"version":3,"names":["i0","Component","ChangeDetectionStrategy","ViewEncapsulation","Input","Optional","NgModule","i2","CommonModule","i3","NzOutletModule","i4","NzDropDownModule","i5","NzIconModule","__decorate","Router","ActivatedRoute","NavigationEnd","PRIMARY_OUTLET","Subject","takeUntil","filter","startWith","PREFIX","InputBoolean","i1","BidiModule","OverlayModule","NzOverlayModule","NzBreadcrumb","NzBreadCrumbItemComponent","constructor","nzBreadCrumbComponent","ɵfac","ɵcmp","NgIf","NgTemplateOutlet","NzStringTemplateOutletDirective","NzDropDownDirective","NzIconDirective","type","args","changeDetection","OnPush","encapsulation","None","selector","exportAs","preserveWhitespaces","template","nzOverlay","NzBreadCrumbComponent","injector","cdr","elementRef","renderer","directionality","nzAutoGenerate","nzSeparator","nzRouteLabel","nzRouteLabelFn","label","breadcrumbs","dir","destroy$","addClass","nativeElement","ngOnInit","registerRouterChange","change","pipe","subscribe","direction","prepareComponentForRtl","detectChanges","value","ngOnDestroy","next","complete","navigate","url","e","preventDefault","get","navigateByUrl","router","activatedRoute","events","getBreadcrumbs","root","markForCheck","Error","route","children","length","child","outlet","routeUrl","snapshot","map","segment","path","join","nextUrl","breadcrumbLabel","data","breadcrumb","params","push","removeClass","Injector","ChangeDetectorRef","ElementRef","Renderer2","Directionality","provide","useExisting","NgForOf","prototype","providers","decorators","NzBreadCrumbSeparatorComponent","NzBreadCrumbModule","ɵmod","ɵinj","imports","declarations","exports"],"sources":["/Users/SSL/Desktop/GitHub-File/aep.GitHub.io/node_modules/ng-zorro-antd/fesm2020/ng-zorro-antd-breadcrumb.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Input, Optional, NgModule } from '@angular/core';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from 'ng-zorro-antd/core/outlet';\nimport { NzOutletModule } from 'ng-zorro-antd/core/outlet';\nimport * as i4 from 'ng-zorro-antd/dropdown';\nimport { NzDropDownModule } from 'ng-zorro-antd/dropdown';\nimport * as i5 from 'ng-zorro-antd/icon';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { __decorate } from 'tslib';\nimport { Router, ActivatedRoute, NavigationEnd, PRIMARY_OUTLET } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { takeUntil, filter, startWith } from 'rxjs/operators';\nimport { PREFIX } from 'ng-zorro-antd/core/logger';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport * as i1 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { NzOverlayModule } from 'ng-zorro-antd/core/overlay';\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n/**\n * https://angular.io/errors/NG3003\n * An intermediate interface for {@link NzBreadCrumbComponent} & {@link NzBreadCrumbItemComponent}\n */\nclass NzBreadcrumb {\n}\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzBreadCrumbItemComponent {\n    constructor(nzBreadCrumbComponent) {\n        this.nzBreadCrumbComponent = nzBreadCrumbComponent;\n    }\n}\nNzBreadCrumbItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: NzBreadCrumbItemComponent, deps: [{ token: NzBreadcrumb }], target: i0.ɵɵFactoryTarget.Component });\nNzBreadCrumbItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: NzBreadCrumbItemComponent, selector: \"nz-breadcrumb-item\", inputs: { nzOverlay: \"nzOverlay\" }, exportAs: [\"nzBreadcrumbItem\"], ngImport: i0, template: `\n    <ng-container *ngIf=\"!!nzOverlay; else noMenuTpl\">\n      <span class=\"ant-breadcrumb-overlay-link\" nz-dropdown [nzDropdownMenu]=\"nzOverlay\">\n        <ng-template [ngTemplateOutlet]=\"noMenuTpl\"></ng-template>\n        <span *ngIf=\"!!nzOverlay\" nz-icon nzType=\"down\"></span>\n      </span>\n    </ng-container>\n\n    <ng-template #noMenuTpl>\n      <span class=\"ant-breadcrumb-link\">\n        <ng-content></ng-content>\n      </span>\n    </ng-template>\n\n    <span class=\"ant-breadcrumb-separator\" *ngIf=\"nzBreadCrumbComponent.nzSeparator\">\n      <ng-container *nzStringTemplateOutlet=\"nzBreadCrumbComponent.nzSeparator\">\n        {{ nzBreadCrumbComponent.nzSeparator }}\n      </ng-container>\n    </span>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i3.NzStringTemplateOutletDirective, selector: \"[nzStringTemplateOutlet]\", inputs: [\"nzStringTemplateOutletContext\", \"nzStringTemplateOutlet\"], exportAs: [\"nzStringTemplateOutlet\"] }, { kind: \"directive\", type: i4.NzDropDownDirective, selector: \"[nz-dropdown]\", inputs: [\"nzDropdownMenu\", \"nzTrigger\", \"nzMatchWidthElement\", \"nzBackdrop\", \"nzClickHide\", \"nzDisabled\", \"nzVisible\", \"nzOverlayClassName\", \"nzOverlayStyle\", \"nzPlacement\"], outputs: [\"nzVisibleChange\"], exportAs: [\"nzDropdown\"] }, { kind: \"directive\", type: i5.NzIconDirective, selector: \"[nz-icon]\", inputs: [\"nzSpin\", \"nzRotate\", \"nzType\", \"nzTheme\", \"nzTwotoneColor\", \"nzIconfont\"], exportAs: [\"nzIcon\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: NzBreadCrumbItemComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    selector: 'nz-breadcrumb-item',\n                    exportAs: 'nzBreadcrumbItem',\n                    preserveWhitespaces: false,\n                    template: `\n    <ng-container *ngIf=\"!!nzOverlay; else noMenuTpl\">\n      <span class=\"ant-breadcrumb-overlay-link\" nz-dropdown [nzDropdownMenu]=\"nzOverlay\">\n        <ng-template [ngTemplateOutlet]=\"noMenuTpl\"></ng-template>\n        <span *ngIf=\"!!nzOverlay\" nz-icon nzType=\"down\"></span>\n      </span>\n    </ng-container>\n\n    <ng-template #noMenuTpl>\n      <span class=\"ant-breadcrumb-link\">\n        <ng-content></ng-content>\n      </span>\n    </ng-template>\n\n    <span class=\"ant-breadcrumb-separator\" *ngIf=\"nzBreadCrumbComponent.nzSeparator\">\n      <ng-container *nzStringTemplateOutlet=\"nzBreadCrumbComponent.nzSeparator\">\n        {{ nzBreadCrumbComponent.nzSeparator }}\n      </ng-container>\n    </span>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: NzBreadcrumb }]; }, propDecorators: { nzOverlay: [{\n                type: Input\n            }] } });\n\nclass NzBreadCrumbComponent {\n    constructor(injector, cdr, elementRef, renderer, directionality) {\n        this.injector = injector;\n        this.cdr = cdr;\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.directionality = directionality;\n        this.nzAutoGenerate = false;\n        this.nzSeparator = '/';\n        this.nzRouteLabel = 'breadcrumb';\n        this.nzRouteLabelFn = label => label;\n        this.breadcrumbs = [];\n        this.dir = 'ltr';\n        this.destroy$ = new Subject();\n        renderer.addClass(elementRef.nativeElement, 'ant-breadcrumb');\n    }\n    ngOnInit() {\n        if (this.nzAutoGenerate) {\n            this.registerRouterChange();\n        }\n        this.directionality.change?.pipe(takeUntil(this.destroy$)).subscribe((direction) => {\n            this.dir = direction;\n            this.prepareComponentForRtl();\n            this.cdr.detectChanges();\n        });\n        this.dir = this.directionality.value;\n        this.prepareComponentForRtl();\n    }\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n    navigate(url, e) {\n        e.preventDefault();\n        this.injector.get(Router).navigateByUrl(url);\n    }\n    registerRouterChange() {\n        try {\n            const router = this.injector.get(Router);\n            const activatedRoute = this.injector.get(ActivatedRoute);\n            router.events\n                .pipe(filter(e => e instanceof NavigationEnd), takeUntil(this.destroy$), startWith(true) // trigger initial render\n            )\n                .subscribe(() => {\n                this.breadcrumbs = this.getBreadcrumbs(activatedRoute.root);\n                this.cdr.markForCheck();\n            });\n        }\n        catch (e) {\n            throw new Error(`${PREFIX} You should import RouterModule if you want to use 'NzAutoGenerate'.`);\n        }\n    }\n    getBreadcrumbs(route, url = '', breadcrumbs = []) {\n        const children = route.children;\n        // If there's no sub root, then stop the recurse and returns the generated breadcrumbs.\n        if (children.length === 0) {\n            return breadcrumbs;\n        }\n        for (const child of children) {\n            if (child.outlet === PRIMARY_OUTLET) {\n                // Only parse components in primary router-outlet (in another word, router-outlet without a specific name).\n                // Parse this layer and generate a breadcrumb item.\n                const routeUrl = child.snapshot.url\n                    .map(segment => segment.path)\n                    .filter(path => path)\n                    .join('/');\n                // Do not change nextUrl if routeUrl is falsy. This happens when it's a route lazy loading other modules.\n                const nextUrl = routeUrl ? `${url}/${routeUrl}` : url;\n                const breadcrumbLabel = this.nzRouteLabelFn(child.snapshot.data[this.nzRouteLabel]);\n                // If have data, go to generate a breadcrumb for it.\n                if (routeUrl && breadcrumbLabel) {\n                    const breadcrumb = {\n                        label: breadcrumbLabel,\n                        params: child.snapshot.params,\n                        url: nextUrl\n                    };\n                    breadcrumbs.push(breadcrumb);\n                }\n                return this.getBreadcrumbs(child, nextUrl, breadcrumbs);\n            }\n        }\n        return breadcrumbs;\n    }\n    prepareComponentForRtl() {\n        if (this.dir === 'rtl') {\n            this.renderer.addClass(this.elementRef.nativeElement, 'ant-breadcrumb-rtl');\n        }\n        else {\n            this.renderer.removeClass(this.elementRef.nativeElement, 'ant-breadcrumb-rtl');\n        }\n    }\n}\nNzBreadCrumbComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: NzBreadCrumbComponent, deps: [{ token: i0.Injector }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i1.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nNzBreadCrumbComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: NzBreadCrumbComponent, selector: \"nz-breadcrumb\", inputs: { nzAutoGenerate: \"nzAutoGenerate\", nzSeparator: \"nzSeparator\", nzRouteLabel: \"nzRouteLabel\", nzRouteLabelFn: \"nzRouteLabelFn\" }, providers: [{ provide: NzBreadcrumb, useExisting: NzBreadCrumbComponent }], exportAs: [\"nzBreadcrumb\"], ngImport: i0, template: `\n    <ng-content></ng-content>\n    <ng-container *ngIf=\"nzAutoGenerate && breadcrumbs.length\">\n      <nz-breadcrumb-item *ngFor=\"let breadcrumb of breadcrumbs\">\n        <a [attr.href]=\"breadcrumb.url\" (click)=\"navigate(breadcrumb.url, $event)\">{{ breadcrumb.label }}</a>\n      </nz-breadcrumb-item>\n    </ng-container>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: NzBreadCrumbItemComponent, selector: \"nz-breadcrumb-item\", inputs: [\"nzOverlay\"], exportAs: [\"nzBreadcrumbItem\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n__decorate([\n    InputBoolean()\n], NzBreadCrumbComponent.prototype, \"nzAutoGenerate\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: NzBreadCrumbComponent, decorators: [{\n            type: Component,\n            args: [{\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    selector: 'nz-breadcrumb',\n                    exportAs: 'nzBreadcrumb',\n                    preserveWhitespaces: false,\n                    providers: [{ provide: NzBreadcrumb, useExisting: NzBreadCrumbComponent }],\n                    template: `\n    <ng-content></ng-content>\n    <ng-container *ngIf=\"nzAutoGenerate && breadcrumbs.length\">\n      <nz-breadcrumb-item *ngFor=\"let breadcrumb of breadcrumbs\">\n        <a [attr.href]=\"breadcrumb.url\" (click)=\"navigate(breadcrumb.url, $event)\">{{ breadcrumb.label }}</a>\n      </nz-breadcrumb-item>\n    </ng-container>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { nzAutoGenerate: [{\n                type: Input\n            }], nzSeparator: [{\n                type: Input\n            }], nzRouteLabel: [{\n                type: Input\n            }], nzRouteLabelFn: [{\n                type: Input\n            }] } });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzBreadCrumbSeparatorComponent {\n}\nNzBreadCrumbSeparatorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: NzBreadCrumbSeparatorComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nNzBreadCrumbSeparatorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: NzBreadCrumbSeparatorComponent, selector: \"nz-breadcrumb-separator\", exportAs: [\"nzBreadcrumbSeparator\"], ngImport: i0, template: `\n    <span class=\"ant-breadcrumb-separator\">\n      <ng-content></ng-content>\n    </span>\n  `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: NzBreadCrumbSeparatorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'nz-breadcrumb-separator',\n                    exportAs: 'nzBreadcrumbSeparator',\n                    template: `\n    <span class=\"ant-breadcrumb-separator\">\n      <ng-content></ng-content>\n    </span>\n  `\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nclass NzBreadCrumbModule {\n}\nNzBreadCrumbModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: NzBreadCrumbModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNzBreadCrumbModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.4\", ngImport: i0, type: NzBreadCrumbModule, declarations: [NzBreadCrumbComponent, NzBreadCrumbItemComponent, NzBreadCrumbSeparatorComponent], imports: [CommonModule, NzOutletModule, OverlayModule, NzOverlayModule, NzDropDownModule, NzIconModule], exports: [BidiModule, NzBreadCrumbComponent, NzBreadCrumbItemComponent, NzBreadCrumbSeparatorComponent] });\nNzBreadCrumbModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: NzBreadCrumbModule, imports: [CommonModule, NzOutletModule, OverlayModule, NzOverlayModule, NzDropDownModule, NzIconModule, BidiModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: NzBreadCrumbModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, NzOutletModule, OverlayModule, NzOverlayModule, NzDropDownModule, NzIconModule],\n                    declarations: [NzBreadCrumbComponent, NzBreadCrumbItemComponent, NzBreadCrumbSeparatorComponent],\n                    exports: [BidiModule, NzBreadCrumbComponent, NzBreadCrumbItemComponent, NzBreadCrumbSeparatorComponent]\n                }]\n        }] });\n\n/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NzBreadCrumbComponent, NzBreadCrumbItemComponent, NzBreadCrumbModule, NzBreadCrumbSeparatorComponent };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}